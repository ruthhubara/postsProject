[{"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\index.js":"1","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\App.js":"2","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\reportWebVitals.js":"3","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\Store.js":"4","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\route\\nav.js":"5","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\register\\register.js":"6","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\reducers\\userReducer.js":"7","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\login\\login.js":"8","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\middlaware\\crudLogin.js":"9","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\middlaware\\crudAddUser.js":"10","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\reducers\\postReducer.js":"11","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\posts.js":"12","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\myPosts\\myPosts.js":"13","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\newPost\\newPost.js":"14","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\myPosts\\updatePost.js":"15","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\reducers\\ReducerUtils.js":"16","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\formValidator\\formValidator.js":"17","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\formValidator\\inputControl.js":"18","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\actions\\userAction.js":"19","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\addPost.js":"20","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\actions\\postAction.js":"21","D:\\Handsaim\\github\\project\\src\\index.js":"22","D:\\Handsaim\\github\\project\\src\\App.js":"23","D:\\Handsaim\\github\\project\\src\\reportWebVitals.js":"24","D:\\Handsaim\\github\\project\\src\\redux\\Store.js":"25","D:\\Handsaim\\github\\project\\src\\route\\nav.js":"26","D:\\Handsaim\\github\\project\\src\\component\\register\\register.js":"27","D:\\Handsaim\\github\\project\\src\\component\\login\\login.js":"28","D:\\Handsaim\\github\\project\\src\\redux\\reducers\\userReducer.js":"29","D:\\Handsaim\\github\\project\\src\\redux\\reducers\\postReducer.js":"30","D:\\Handsaim\\github\\project\\src\\redux\\middlaware\\crudAddUser.js":"31","D:\\Handsaim\\github\\project\\src\\redux\\middlaware\\crudLogin.js":"32","D:\\Handsaim\\github\\project\\src\\component\\posts.js":"33","D:\\Handsaim\\github\\project\\src\\component\\newPost\\newPost.js":"34","D:\\Handsaim\\github\\project\\src\\component\\myPosts\\myPosts.js":"35","D:\\Handsaim\\github\\project\\src\\component\\myPosts\\updatePost.js":"36","D:\\Handsaim\\github\\project\\src\\redux\\reducers\\ReducerUtils.js":"37","D:\\Handsaim\\github\\project\\src\\component\\formValidator\\inputControl.js":"38","D:\\Handsaim\\github\\project\\src\\redux\\actions\\userAction.js":"39","D:\\Handsaim\\github\\project\\src\\component\\formValidator\\formValidator.js":"40","D:\\Handsaim\\github\\project\\src\\component\\addPost.js":"41","D:\\Handsaim\\github\\project\\src\\redux\\actions\\postAction.js":"42"},{"size":625,"mtime":1613394628000,"results":"43","hashOfConfig":"44"},{"size":828,"mtime":1613859644625,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":565,"mtime":1613504408923,"results":"47","hashOfConfig":"44"},{"size":2086,"mtime":1613854214043,"results":"48","hashOfConfig":"44"},{"size":3836,"mtime":1613860544820,"results":"49","hashOfConfig":"44"},{"size":696,"mtime":1613859678179,"results":"50","hashOfConfig":"44"},{"size":4693,"mtime":1613859694163,"results":"51","hashOfConfig":"44"},{"size":1858,"mtime":1613665132373,"results":"52","hashOfConfig":"44"},{"size":1515,"mtime":1613849878792,"results":"53","hashOfConfig":"44"},{"size":676,"mtime":1613508283107,"results":"54","hashOfConfig":"44"},{"size":12643,"mtime":1613652164186,"results":"55","hashOfConfig":"44"},{"size":6807,"mtime":1613669983934,"results":"56","hashOfConfig":"44"},{"size":5850,"mtime":1613598904422,"results":"57","hashOfConfig":"44"},{"size":6730,"mtime":1613665590050,"results":"58","hashOfConfig":"44"},{"size":362,"mtime":1613407664000,"results":"59","hashOfConfig":"44"},{"size":503,"mtime":1613581536256,"results":"60","hashOfConfig":"44"},{"size":1328,"mtime":1613860498396,"results":"61","hashOfConfig":"44"},{"size":612,"mtime":1613407628000,"results":"62","hashOfConfig":"44"},{"size":764,"mtime":1613665455402,"results":"63","hashOfConfig":"44"},{"size":612,"mtime":1613502440925,"results":"64","hashOfConfig":"44"},{"size":625,"mtime":1613394628000,"results":"65","hashOfConfig":"66"},{"size":800,"mtime":1613892210632,"results":"67","hashOfConfig":"66"},{"size":362,"mtime":499162500000,"results":"68","hashOfConfig":"66"},{"size":535,"mtime":1613892192189,"results":"69","hashOfConfig":"66"},{"size":2325,"mtime":1613892486870,"results":"70","hashOfConfig":"66"},{"size":3685,"mtime":1613892097320,"results":"71","hashOfConfig":"66"},{"size":3722,"mtime":1613892029601,"results":"72","hashOfConfig":"66"},{"size":696,"mtime":1613859678179,"results":"73","hashOfConfig":"66"},{"size":676,"mtime":1613508283107,"results":"74","hashOfConfig":"66"},{"size":1262,"mtime":1613892158291,"results":"75","hashOfConfig":"66"},{"size":1280,"mtime":1613892177977,"results":"76","hashOfConfig":"66"},{"size":2547,"mtime":1613892140080,"results":"77","hashOfConfig":"66"},{"size":3903,"mtime":1613892090391,"results":"78","hashOfConfig":"66"},{"size":5434,"mtime":1613892048074,"results":"79","hashOfConfig":"66"},{"size":6269,"mtime":1613892064878,"results":"80","hashOfConfig":"66"},{"size":362,"mtime":1613407664000,"results":"81","hashOfConfig":"66"},{"size":482,"mtime":1613892002332,"results":"82","hashOfConfig":"66"},{"size":612,"mtime":1613407628000,"results":"83","hashOfConfig":"66"},{"size":503,"mtime":1613581536256,"results":"84","hashOfConfig":"66"},{"size":672,"mtime":1613892112686,"results":"85","hashOfConfig":"66"},{"size":612,"mtime":1613502440925,"results":"86","hashOfConfig":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"zxs234",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"89"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hvttty",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"160"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"160"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\index.js",[],["182","183"],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\App.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\reportWebVitals.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\Store.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\route\\nav.js",["184","185"],"import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Login from '../component/login/login';\r\nimport Posts from '../component/posts';\r\nimport MyPosts from '../component/myPosts/myPosts';\r\nimport Register from '../component/register/register'\r\nimport UpdatePost from '../component/myPosts/updatePost'\r\nimport NewPost from '../component/newPost/newPost';\r\nimport './nav.css';\r\nimport newPost from '../component/newPost/newPost';\r\n\r\nexport default function RoutesNav() {\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Nav />\r\n                <Switch>\r\n                    {/* <Route path=\"/\">\r\n                        <Login />\r\n                    </Route> */}\r\n                    <Route path=\"/posts\">\r\n                        <Posts />\r\n                    </Route>\r\n                    <Route path=\"/myPosts\">\r\n                        <MyPosts />\r\n                    </Route>\r\n                    <Route path=\"/registerUser\">\r\n                        <Register />\r\n                    </Route>\r\n                    <Route path=\"/updatePost\">\r\n                        <UpdatePost />\r\n                    </Route>\r\n                    <Route path=\"/newPost\">\r\n                        <NewPost />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Nav() {\r\n    return (\r\n        <>\r\n            <nav>\r\n                <ul className=\"sidenav\" style={{ color: 'green' }}>\r\n                    <li>\r\n                        <a href=\"/\"  >exit</a>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/posts\">posts</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/myPosts\">myPosts</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/newPost\">New post</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <br></br>\r\n            \r\n        </>\r\n    )\r\n}","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\register\\register.js",["186","187"],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\reducers\\userReducer.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\login\\login.js",["188","189","190"],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\middlaware\\crudLogin.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\middlaware\\crudAddUser.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\reducers\\postReducer.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\posts.js",["191"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport addPost from './addPost';\r\n\r\n// import axios from 'axios'\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function Posts(props) {\r\n    const { user } = props;\r\n    let [ListPosts, setListPosts] = useState([]);\r\n    useEffect(\r\n        () => {\r\n\r\n            fetch('https://jsonplaceholder.typicode.com/posts', {\r\n                method: 'get',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n                .then((res) => res.json()).then((resJson) => {\r\n                    setListPosts(resJson)\r\n                    console.log(ListPosts)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n        //     axios.get(`https://jsonplaceholder.typicode.com/posts`)\r\n        //         .then(response => {\r\n        //             ListPosts = response.data\r\n        //             // console.log(ListPosts)\r\n        //         }).catch(err => {\r\n        //             console.log(\"err \", err)\r\n        //         })\r\n        // }\r\n        , []\r\n    )\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <table>\r\n                <th>\r\n                    <td>title</td>\r\n                    <td>body</td>\r\n                </th>\r\n                {ListPosts.map((item) => (\r\n\r\n                    <tr key={item.id}>\r\n                        <td>{item.title}</td>\r\n                        <td>{item.body}</td>\r\n                        <td>\r\n                            <button onClick={() => { addPost(item) }}>add to my posts</button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                \r\n\r\n            </table> */}\r\n            {/* {ListPosts.map((item) => (\r\n                <div key={item.id} className=\"card\" style=\"width: 18rem;\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{item.title}</h5>\r\n                        <p className=\"card-text\">{item.body}</p>\r\n                    </div>\r\n                </div>))}\r\n                { */}\r\n            <h1 style={{ color: 'green' }}>posts</h1>\r\n            <div className=\"row\" style={{ marginLeft: 2 }} >\r\n                {ListPosts[0] && ListPosts.map((post) =>\r\n                    <div key={post._id} className=\"card border-success mb-3 ml-2 mr-2\" style={{ width: \"18rem\" }}>\r\n                        <div className=\"card-header\">\r\n                            <svg style={{ width: 30, height: 50 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-card-text\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z\" />\r\n                                <path d=\"M3 5.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3 8a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 8zm0 2.5a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"card-body text-success\">\r\n                            <h5 className=\"card-title\">{post.title}</h5>\r\n                            <p className=\"card-text\">{post.body}</p>\r\n                            <button type=\"button\" onClick={() => { addPost(post, user.id) }} className=\"btn btn-outline-success\" >add to my posts</button>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                )}\r\n            </div>\r\n\r\n\r\n            {/* <div key={post._id} className=\"card border-success mb-3\" style={{ maxWidth: '18rem' }}>\r\n                        <div className=\"card-header\">date:{post.date}  time:{post.time}</div>\r\n                        <div className=\"card-body text-success\">\r\n                            <h5 className=\"card-title\">{post.title}</h5>\r\n                            <p className=\"card-text\">{post.body}</p>\r\n                            <button type=\"button\" onClick={() => deletePost(post._id)} className=\"btn btn-outline-success\" style={{ marginRight: 20 }}>delete</button>\r\n                            <button type=\"button\" onClick={() => updatePost(post)} className=\"btn btn-outline-success\">update</button>\r\n                        </div>\r\n                    </div> */}\r\n        </>\r\n    )\r\n\r\n})\r\n\r\n\r\n\r\n\r\n// import { setTempElementImg } from '../actions/canvasActions'\r\n// import { setUser, setCheckPermission } from '../actions/userAction'\r\n// import $ from 'jquery'\r\n// import { auth } from '../../services/firebase';\r\n// import axios from 'axios';\r\n// import promise from 'promise'\r\n\r\n// let username = ''\r\n// export const checkPermission = ({ dispatch, getState }) => next => action => {\r\n//     if (action.type === 'CHECK_PERMISSION') {\r\n//         console.log(\"user2: \", username);\r\n//         let TokenToString = action.payload.accessToken.toString();\r\n//         let dataToProfilePage = {\r\n//             action: \"loginCheckPermission\",\r\n//             token: TokenToString,\r\n//         };\r\n//         // username = getState().user.user.username\r\n//         if (username === \"null\" || username === null) {\r\n//             username = getState().user.user.username\r\n//         }\r\n//         $.ajax({\r\n//             url: \"https://blox.leader.codes/api/checkPremission/\" + username,\r\n//             headers: {\r\n//                 Authorization: TokenToString\r\n//             },\r\n//             method: \"post\",\r\n//             dataType: \"json\",\r\n//             contentType: \"application/json\",\r\n//             withCradentials: true,\r\n//             data: JSON.stringify(dataToProfilePage),\r\n//             success: function (data) {\r\n//                 // history = useHistory()\r\n//                 console.log(\"dataaaaaa\", data)\r\n//                 let jsonWebToken = data.jwt;\r\n//                 let uid = data.uid;\r\n//                 let noQuotesJwtData = jsonWebToken.split('\"').join(\"\");\r\n//                 let now = new Date();\r\n//                 now.setMonth(now.getMonth() + 1);\r\n//                 document.cookie = \"jwt=\" + noQuotesJwtData + \";domain=.leader.codes\" + \"; path=/; Expires=\" + now.toUTCString() + \";\"\r\n//                 let username1 = data.username\r\n//                 dispatch(setUser({ \"_id\": data._id, \"username\": username1, \"email\": data.email, \"uId\": data.uid, \"jwt\": data.jwt }))\r\n//                 console.log(\"uuu\", username)\r\n//                 let tempUserName = ''\r\n//                 if (username1 !== null && username1 !== undefined) {\r\n//                     tempUserName = username1.replace(' ', '%20')\r\n//                 }\r\n//                 //'http://localhost:3000/' + tempUserName\r\n//                 // if (username1 !== null && (window.location.href != 'https://blox.leader.codes/' + tempUserName + '/')) {\r\n//                 //     window.location.href = '/' + username1\r\n//                 // }\r\n\r\n//             },\r\n//         });\r\n\r\n//     }\r\n//     return next(action);\r\n// }\r\n\r\n// export const onAuthStateChanged = ({ dispatch, getState }) => next => action => {\r\n//     if (action.type === 'ON_AUTH_STATE_CHANGED') {\r\n//         auth.onAuthStateChanged(function (user) {\r\n//             console.log(\"onauthstatechanged work from middleware\", user);\r\n//             if (user) {\r\n//                 username = user.displayName;\r\n//                 console.log(\"user: \", username);\r\n//                 console.log(\"auth.currentUser\", auth.currentUser);\r\n//                 auth\r\n//                     .currentUser.getIdToken(true)\r\n//                     .then((firebaseToken) => {\r\n//                         console.log(\"ft\", firebaseToken);\r\n//                         $.ajax({\r\n//                             url: \"https://blox.leader.codes/api/getAccessToken\",\r\n//                             method: \"post\",\r\n//                             dataType: \"json\",\r\n//                             contentType: \"application/json\",\r\n//                             data: JSON.stringify({\r\n//                                 action: \"firebaseloginwithcredentials\",\r\n//                                 jwt: firebaseToken\r\n//                             }),\r\n//                             success: function (data) {\r\n//                                 console.log(\"data\", data);\r\n//                                 dispatch(setCheckPermission(data, action.username))\r\n//                                 // checkPremission(data);\r\n//                             }\r\n//                         });\r\n//                     })\r\n//                     .catch(function (error) {\r\n//                         alert(error);\r\n//                     });\r\n//             }\r\n//             else {\r\n//                 //\"http://localhost:3000/\" \r\n//                 // if (window.location.href !== \"https://blox.leader.codes/\") {\r\n//                 //     console.log(\"location\")\r\n//                 //     window.location.href = '/'\r\n//                 // }\r\n//             }\r\n//         });\r\n//     }\r\n\r\n//     return next(action);\r\n// }\r\n\r\n// export const getImageFromServer = ({ dispatch, getState }) => next => action => {\r\n//     if (action.type === 'UPLOAD_IMAGE') {\r\n\r\n//         $.ajax({\r\n//             \"url\": 'https://blox.leader.codes/api/uploadImage/' + 'bNS4EGSQGTOuAeflYgJCULKdg122',\r\n//             \"method\": \"POST\",\r\n//             \"processData\": false,\r\n//             \"mimeType\": \"multipart/form-data\",\r\n//             \"contentType\": false,\r\n//             \"headers\": {\r\n//                 //בauthorization יש לשים jwt אחר!!!!!!!      \r\n//                 \"Authorization\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJiTlM0RUdTUUdUT3VBZWZsWWdKQ1VMS2RnMTIyIiwiZW1haWwiOiJyaXZrYWZmQGdtYWlsLmNvbSIsImlwIjoiNS4xMDIuMjQ2LjIwMiIsImlhdCI6MTYwNzMzNzAxNn0.bLKjgoxTtM_UybtlAARgUViXTMwpl4WttYMUvZAsIGU\"\r\n\r\n//             },\r\n//             \"data\": action.fd,\r\n//             \"async\": false,\r\n//             success: function (data1) {\r\n//                 console.log(\"success\")\r\n//                 console.log(data1);\r\n//                 setTimeout(function () {\r\n//                     console.log(\"after setTimeOut\");\r\n//                     dispatch(setTempElementImg(data1, action.local_img))\r\n//                 }, 2000);\r\n//             },\r\n//             error: function (err) {\r\n//                 console.log(err)\r\n//             }\r\n//         });\r\n\r\n//     }\r\n//     // remeber!!!!!!!!!!!\r\n//     return next(action);\r\n// };\r\n\r\n// export const sendTemplateToServer = ({ dispatch, getState }) => next => action => {\r\n//     if (action.type === 'TEMPLATE_IMAGE_TO_SERVER') {\r\n//         $.ajax({\r\n//             \"url\": 'https://blox.leader.codes/api/add-template-image',\r\n//             \"method\": \"POST\",\r\n//             \"processData\": false,\r\n//             \"mimeType\": \"multipart/form-data\",\r\n//             \"contentType\": false,\r\n//             cache: false,\r\n//             \"headers\": {\r\n//                 //בauthorization יש לשים jwt אחר!!!!!!!      \r\n//                 \"Authorization\": getState().user.user.jwt\r\n\r\n//             },\r\n//             \"data\": action.payload,\r\n//             \"async\": false,\r\n//             success: function (data1) {\r\n//                 console.log(\"success\")\r\n//                 console.log(data1)\r\n//             },\r\n//             error: function (err) {\r\n//                 console.log(err)\r\n//             }\r\n//         });\r\n\r\n\r\n//     }\r\n//     if (action.type === 'ADD_TEMPLATE_TO_SERVER') {\r\n//         axios.post('https://blox.leader.codes/api/add-template/', action.payload)\r\n//             .then(res => console.log(res.data))\r\n//             .then(\r\n//                 (res) => {\r\n//                     alert('Add Template Successfuly')\r\n//                     console.log(\"success\" + res)\r\n//                 })\r\n//             .catch(err => console.log(err));\r\n//         // $.ajax({\r\n//         //     \"type\": \"POST\",\r\n//         //     \"url\": 'https://blox.leader.codes/api/add-template',\r\n//         //     \"data\": action.payload,\r\n//         //     success: function (msg) {\r\n//         //         alert('Add Template Successfuly');\r\n//         //         console.log(\"success\")\r\n//         //         console.log(msg);\r\n//         //     },\r\n//         //     error: function (err) {\r\n//         //         console.log(err)\r\n//         //     },\r\n//         // })\r\n\r\n//     }\r\n//     return next(action);\r\n// };\r\n","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\myPosts\\myPosts.js",["192","193","194"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { actionsPost } from '../../redux/actions/postAction';\r\nimport { useHistory } from 'react-router-dom'\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        post: state.postReducer.post\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    // setUserName: (name) => dispatch(actionsUser.setUserName(name)),\r\n    // setPassword: (password) => dispatch(actionsUser.setUserPassword(password)),\r\n    setPost: (post) => dispatch(actionsPost.setPost(post))\r\n}\r\n)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function MyPosts(props) {\r\n\r\n\r\n    const [myPosts, setMyPosts] = useState([]);\r\n    const { user, setPost } = props;\r\n    const history = useHistory()\r\n    function getMyPosts() {\r\n        fetch('http://localhost:3001/getUserPosts/' + user.id, {\r\n            method: 'get',\r\n            headers: {\r\n                // Authorization: TokenToString,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token'),\r\n\r\n\r\n            },\r\n\r\n        })\r\n            .then((res) => res.json()).then((resJson) => {\r\n                debugger\r\n                setMyPosts(resJson.posts)\r\n                console.log(myPosts[0])\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        getMyPosts()\r\n\r\n    }, [])\r\n\r\n    function deletePost(postId) {\r\n        debugger\r\n        fetch('http://localhost:3001/deletePost/' + user.id + \"/\" + postId + \"/\", {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token'),\r\n\r\n            },\r\n            //     // Authorization: TokenToString,\r\n            //     \"Content-Type\": \"application/json\"\r\n\r\n            //     // 'Content-Type': 'application/json',\r\n            //     // \"Access-Control-Allow-Methods\"\r\n            // },\r\n\r\n        })\r\n\r\n            .then((res) => res.json()).then((resJson) => {\r\n                if (resJson == true) {\r\n                    alert(\"post deleted\")\r\n                    getMyPosts()\r\n\r\n                }\r\n                else {\r\n                    alert(\"post not deleted\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n    function updatePost(post) {\r\n        setPost(post)\r\n        history.push('/updatePost')\r\n    }\r\n    function addPost() {\r\n        history.push('/newPost')\r\n    }\r\n    return (\r\n        <>\r\n            <button style={{ marginLeft: 2 }} type=\"button\" onClick={() => addPost()} className=\"btn btn-outline-success\" style={{ width: 200 }}>add new post</button>\r\n\r\n            <div className=\"row\" style={{ marginLeft: 2 }} >\r\n\r\n                {\r\n\r\n                    myPosts[0] && myPosts.map((post) =>\r\n                        // <div key={post._id} className=\"col-3\" className=\"card border-success mb-3\" style=\"max-width: 18rem;\">\r\n                        //     <div className=\"card-header\">Header</div>\r\n                        //     <div className=\"card-body text-success\">\r\n\r\n                        //         <h5 className=\"card-title \">{post.title}</h5>\r\n                        //         <p className=\"card-text\">{post.body}</p>\r\n\r\n                        //         {/* <button onClick={() => deletePost(post._id)}>delete</button> */}\r\n                        //         <button type=\"button\" onClick={() => deletePost(post._id)} className=\"btn btn-outline-success\">delete</button>\r\n                        //         <button type=\"button\" onClick={() => updatePost(post)} className=\"btn btn-outline-success\">update</button>\r\n\r\n                        //         {/* <button onClick={() => updatePost(post)}>update</button> */}\r\n                        //     </div>\r\n                        // </div>\r\n\r\n                        <div key={post._id} className=\"card border-success mb-3 ml-2 mr-2\" style={{ maxWidth: '18rem', color: 'green' }}>\r\n                            <div className=\"card-header\"><svg style={{ marginLeft: 0 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-calendar4\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM2 2a1 1 0 0 0-1 1v1h14V3a1 1 0 0 0-1-1H2zm13 3H1v9a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V5z\" />\r\n                            </svg>{post.date} <svg style={{ marginRight: 0 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clock-history\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022l-.074.997zm2.004.45a7.003 7.003 0 0 0-.985-.299l.219-.976c.383.086.76.2 1.126.342l-.36.933zm1.37.71a7.01 7.01 0 0 0-.439-.27l.493-.87a8.025 8.025 0 0 1 .979.654l-.615.789a6.996 6.996 0 0 0-.418-.302zm1.834 1.79a6.99 6.99 0 0 0-.653-.796l.724-.69c.27.285.52.59.747.91l-.818.576zm.744 1.352a7.08 7.08 0 0 0-.214-.468l.893-.45a7.976 7.976 0 0 1 .45 1.088l-.95.313a7.023 7.023 0 0 0-.179-.483zm.53 2.507a6.991 6.991 0 0 0-.1-1.025l.985-.17c.067.386.106.778.116 1.17l-1 .025zm-.131 1.538c.033-.17.06-.339.081-.51l.993.123a7.957 7.957 0 0 1-.23 1.155l-.964-.267c.046-.165.086-.332.12-.501zm-.952 2.379c.184-.29.346-.594.486-.908l.914.405c-.16.36-.345.706-.555 1.038l-.845-.535zm-.964 1.205c.122-.122.239-.248.35-.378l.758.653a8.073 8.073 0 0 1-.401.432l-.707-.707z\" />\r\n                                    <path d=\"M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0v1z\" />\r\n                                    <path d=\"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\" />\r\n                                </svg>{post.time}</div>\r\n                            <div className=\"card-body text-success\">\r\n                                <h5 className=\"card-title\">{post.title}</h5>\r\n                                <p className=\"card-text\">{post.body}</p>\r\n                                <button type=\"button\" onClick={() => deletePost(post._id)} className=\"btn btn-outline-success\" style={{ marginRight: 20 }}>delete</button>\r\n                                <button type=\"button\" onClick={() => updatePost(post)} className=\"btn btn-outline-success\">update</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n})\r\n\r\n","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\newPost\\newPost.js",["195","196"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport addPost from '../addPost';\r\n\r\nimport { input } from '../formValidator/inputControl';\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n    }\r\n}\r\nfunction NewPost(props) {\r\n    const titleRef = React.createRef()\r\n    const bodyRef = React.createRef()\r\n    // const { handleSubmit, reset, pristine, submitting, valid } = props;\r\n    const { handleSubmit, user } = props;\r\n\r\n    debugger\r\n\r\n    function newPost() {\r\n        const post = {\r\n            title: titleRef.current.value,\r\n            body: bodyRef.current.value\r\n        }\r\n        addPost(post, user.id)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* <form className='col-6' style={{ color: \"green\", marginTop: 100, marginLeft: 350 }} onSubmit={handleSubmit(newPost)}  >\r\n                <svg style={{ width: 200, height: 200 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                    <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                </svg>\r\n                <h2>new post form</h2>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        ref={titleRef}\r\n                        className=\"form-control\"\r\n\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        name=\"body\"\r\n                        type=\"text\"\r\n                        id=\"body\"\r\n                        ref={bodyRef}\r\n                        className=\"form-control\"\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        style={{ width: 150 }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\" >\r\n                        add\r\n                </button>\r\n                </div>\r\n            </form> */}\r\n            {/* </form> */}\r\n            <form className='col-6' style={{ color: \"green\", marginTop: 60, marginLeft: 350 }} onSubmit={handleSubmit(newPost)}  >\r\n                <svg style={{ width: 200, height: 200 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                    <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                </svg>\r\n                <h2>add post form</h2>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>title</label>\r\n                    <input\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        component={input}\r\n                        id=\"title\"\r\n                        ref={titleRef}\r\n                        className=\"form-control\"\r\n\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>body</label>\r\n                    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"4\"\r\n                        ref={bodyRef}\r\n                    ></textarea>\r\n                </div>\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <input\r\n                        onChange={(e) => setBody(e.target.value)}\r\n                        value={post.body}\r\n                        name=\"body\"\r\n                        type=\"text\"\r\n                        component={input}\r\n                        id=\"body\"\r\n                        ref={bodyRef}\r\n                        className=\"form-control\" /> */}\r\n\r\n                {/* </div> */}\r\n\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        style={{ width: 300 }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\" >\r\n                        add post\r\n\r\n                </button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(reduxForm({\r\n    form: 'NewPost',\r\n    // onSubmit\r\n})(NewPost))\r\n\r\n{/* <div className = \"col-3\" style = {{color: \"green\", marginLeft: 550}}>\r\n<h2 style={{  color: \"red\" }}>{state.flash}</h2>‏\r\n\r\n     <div className=\"form-group\" >\r\n         <label >שם משתמש</label>\r\n         <input type=\"text\" value = {user.name} class=\"form-control\" id=\"userName\" onChange = {(e) => setName(e.target.value)} placeholder=\"שם משתמש\" />\r\n     </div>\r\n     <div class=\"form-group\">\r\n         <label >סיסמא</label>\r\n         <input type=\"password\" value = {user.password} class=\"form-control\" id=\"userPassword\" onChange = {(e) => setPassword(e.target.value)} placeholder=\"סיסמא\" />\r\n     </div>\r\n     <button  class=\"btn btn-success\" onClick = {logIn}>הכנס</button>\r\n </div>\r\n</> */}","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\myPosts\\updatePost.js",["197","198","199","200","201","202","203"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { actionsPost } from '../../redux/actions/postAction';\r\nimport { input } from '../formValidator/inputControl';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        post: state.postReducer.post,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    // setUserName: (name) => dispatch(actionsUser.setUserName(name)),\r\n    // setPassword: (password) => dispatch(actionsUser.setUserPassword(password)),\r\n    setTitle: (title) => dispatch(actionsPost.setTitle(title)),\r\n    setBody: (body) => dispatch(actionsPost.setBody(body))\r\n\r\n}\r\n)\r\n\r\nfunction UpdatePost(props) {\r\n    const titleRef = React.createRef()\r\n    const bodyRef = React.createRef()\r\n    const { post, setTitle, setBody } = props\r\n    // const { handleSubmit, reset, pristine, submitting, valid } = props;\r\n    const { handleSubmit, reset, pristine, submitting, valid } = props;\r\n\r\n    debugger\r\n    function updatePost() {\r\n\r\n        const postToUpdate = {\r\n            title: titleRef.current.value,\r\n            body: bodyRef.current.value\r\n        }\r\n\r\n        fetch('http://localhost:3001/updatePost/' + post.id, {\r\n\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token'),\r\n\r\n            },\r\n            //     // Authorization: TokenToString,\r\n            //     \"Content-Type\": \"application/json\"\r\n\r\n            //     // 'Content-Type': 'application/json',\r\n            //     // \"Access-Control-Allow-Methods\"\r\n            // },\r\n            body: JSON.stringify(postToUpdate)\r\n\r\n        })\r\n\r\n            .then((res) => res.json()).then((resJson) => {\r\n                if (resJson == true) {\r\n                    alert(\"post update\")\r\n                }\r\n                else {\r\n                    alert(\"post not update\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            {/* <div className=\"col-3\" style={{ color: \"green\", marginLeft: 550 }}>\r\n\r\n                <div className=\"form-group\" >\r\n                    <label >title</label>\r\n                    <input type=\"text\" value={post.title} onChange={(e) => setTitle(e.target.value)} className=\"form-control\" ref={titleRef} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label >body</label>\r\n                    <input type=\"text\" onChange={(e) => setBody(e.target.value)} value={post.body} className=\"form-control\" ref={bodyRef} />\r\n                </div>\r\n                <button class=\"btn btn-success\" onClick={updatePost}>updatePost</button>\r\n            </div> */}\r\n            {/* <form onSubmit={handleSubmit(updatePost())}> */}\r\n            {/* <input type=\"text\" value={post.title} ref={titleRef}></input>\r\n            <input type=\"text\" value={post.body} ref={bodyRef}></input> */}\r\n            {/* <button type=\"submit\" className=\"btn btn-success\"\r\n                disabled={!valid || pristine || submitting}>submit</button> */}\r\n\r\n            {/* </form> */}\r\n            <form className='col-6' style={{ color: \"green\", marginTop: 60, marginLeft: 350 }} onSubmit={handleSubmit(updatePost)}  >\r\n                <svg style={{ width: 200, height: 200 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                    <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                </svg>\r\n                <h2>update post form</h2>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>title</label>\r\n                    <input\r\n                        value={post.title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        component={input}\r\n                        id=\"title\"\r\n                        ref={titleRef}\r\n                        className=\"form-control\"\r\n\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>body</label>\r\n                    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"4\"\r\n                        onChange={(e) => setBody(e.target.value)}\r\n\r\n                        value={post.body}\r\n                        ref={bodyRef}\r\n                    ></textarea>\r\n                </div>\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <input\r\n                        onChange={(e) => setBody(e.target.value)}\r\n                        value={post.body}\r\n                        name=\"body\"\r\n                        type=\"text\"\r\n                        component={input}\r\n                        id=\"body\"\r\n                        ref={bodyRef}\r\n                        className=\"form-control\" /> */}\r\n\r\n                {/* </div> */}\r\n\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        style={{ width: 300 }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\" >\r\n                        update\r\n\r\n                </button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\r\n    form: 'UpdatePost',\r\n    // onSubmit\r\n})(UpdatePost))\r\n\r\n{/* <div className = \"col-3\" style = {{color: \"green\", marginLeft: 550}}>\r\n<h2 style={{  color: \"red\" }}>{state.flash}</h2>‏\r\n\r\n     <div className=\"form-group\" >\r\n         <label >שם משתמש</label>\r\n         <input type=\"text\" value = {user.name} class=\"form-control\" id=\"userName\" onChange = {(e) => setName(e.target.value)} placeholder=\"שם משתמש\" />\r\n     </div>\r\n     <div class=\"form-group\">\r\n         <label >סיסמא</label>\r\n         <input type=\"password\" value = {user.password} class=\"form-control\" id=\"userPassword\" onChange = {(e) => setPassword(e.target.value)} placeholder=\"סיסמא\" />\r\n     </div>\r\n     <button  class=\"btn btn-success\" onClick = {logIn}>הכנס</button>\r\n </div>\r\n</> */}","D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\reducers\\ReducerUtils.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\formValidator\\formValidator.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\formValidator\\inputControl.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\actions\\userAction.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\component\\addPost.js",[],"D:\\Handsaim\\projectGit\\postsproject\\project\\src\\redux\\actions\\postAction.js",[],"D:\\Handsaim\\github\\project\\src\\index.js",[],"D:\\Handsaim\\github\\project\\src\\App.js",[],"D:\\Handsaim\\github\\project\\src\\reportWebVitals.js",[],"D:\\Handsaim\\github\\project\\src\\redux\\Store.js",[],"D:\\Handsaim\\github\\project\\src\\route\\nav.js",["204","205","206"],"D:\\Handsaim\\github\\project\\src\\component\\register\\register.js",["207","208"],"D:\\Handsaim\\github\\project\\src\\component\\login\\login.js",["209","210"],"D:\\Handsaim\\github\\project\\src\\redux\\reducers\\userReducer.js",[],"D:\\Handsaim\\github\\project\\src\\redux\\reducers\\postReducer.js",[],"D:\\Handsaim\\github\\project\\src\\redux\\middlaware\\crudAddUser.js",[],"D:\\Handsaim\\github\\project\\src\\redux\\middlaware\\crudLogin.js",[],"D:\\Handsaim\\github\\project\\src\\component\\posts.js",["211"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport addPost from './addPost';\r\n\r\n// import axios from 'axios'\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(function Posts(props) {\r\n    const { user } = props;\r\n    let [ListPosts, setListPosts] = useState([]);\r\n    useEffect(\r\n        () => {\r\n\r\n            fetch('https://jsonplaceholder.typicode.com/posts', {\r\n                method: 'get',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n                .then((res) => res.json()).then((resJson) => {\r\n                    setListPosts(resJson)\r\n                    console.log(ListPosts)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n      \r\n        , []\r\n    )\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          \r\n            <h1 style={{ color: 'green' }}>posts</h1>\r\n            <div className=\"row\" style={{ marginLeft: 2 }} >\r\n                {ListPosts[0] && ListPosts.map((post) =>\r\n                    <div key={post._id} className=\"card border-success mb-3 ml-2 mr-2\" style={{ width: \"18rem\" }}>\r\n                        <div className=\"card-header\">\r\n                            <svg style={{ width: 30, height: 50 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-card-text\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M14.5 3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h13zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z\" />\r\n                                <path d=\"M3 5.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3 8a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 8zm0 2.5a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"card-body text-success\">\r\n                            <h5 className=\"card-title\">{post.title}</h5>\r\n                            <p className=\"card-text\">{post.body}</p>\r\n                            <button type=\"button\" onClick={() => { addPost(post, user.id) }} className=\"btn btn-outline-success\" >add to my posts</button>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                )}\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n\r\n})\r\n\r\n\r\n\r\n\r\n",["212","213"],"D:\\Handsaim\\github\\project\\src\\component\\newPost\\newPost.js",["214","215"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport addPost from '../addPost';\r\n\r\nimport { input } from '../formValidator/inputControl';\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n    }\r\n}\r\nfunction NewPost(props) {\r\n    const titleRef = React.createRef()\r\n    const bodyRef = React.createRef()\r\n    const { handleSubmit, user } = props;\r\n\r\n    debugger\r\n\r\n    function newPost() {\r\n        const post = {\r\n            title: titleRef.current.value,\r\n            body: bodyRef.current.value\r\n        }\r\n        addPost(post, user.id)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <form className='col-6' style={{ color: \"green\", marginTop: 60, marginLeft: 350 }} onSubmit={handleSubmit(newPost)}  >\r\n                <svg style={{ width: 200, height: 200 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                    <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                </svg>\r\n                <h2>add post form</h2>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>title</label>\r\n                    <input\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        component={input}\r\n                        id=\"title\"\r\n                        ref={titleRef}\r\n                        className=\"form-control\"\r\n\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>body</label>\r\n                    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"4\"\r\n                        ref={bodyRef}\r\n                    ></textarea>\r\n                </div>\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <input\r\n                        onChange={(e) => setBody(e.target.value)}\r\n                        value={post.body}\r\n                        name=\"body\"\r\n                        type=\"text\"\r\n                        component={input}\r\n                        id=\"body\"\r\n                        ref={bodyRef}\r\n                        className=\"form-control\" /> */}\r\n\r\n                {/* </div> */}\r\n\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        style={{ width: 300 }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\" >\r\n                        add post\r\n\r\n                </button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(reduxForm({\r\n    form: 'NewPost',\r\n    // onSubmit\r\n})(NewPost))\r\n\r\n{/* <div className = \"col-3\" style = {{color: \"green\", marginLeft: 550}}>\r\n<h2 style={{  color: \"red\" }}>{state.flash}</h2>‏\r\n\r\n     <div className=\"form-group\" >\r\n         <label >שם משתמש</label>\r\n         <input type=\"text\" value = {user.name} class=\"form-control\" id=\"userName\" onChange = {(e) => setName(e.target.value)} placeholder=\"שם משתמש\" />\r\n     </div>\r\n     <div class=\"form-group\">\r\n         <label >סיסמא</label>\r\n         <input type=\"password\" value = {user.password} class=\"form-control\" id=\"userPassword\" onChange = {(e) => setPassword(e.target.value)} placeholder=\"סיסמא\" />\r\n     </div>\r\n     <button  class=\"btn btn-success\" onClick = {logIn}>הכנס</button>\r\n </div>\r\n</> */}","D:\\Handsaim\\github\\project\\src\\component\\myPosts\\myPosts.js",["216","217","218"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { actionsPost } from '../../redux/actions/postAction';\r\nimport { useHistory } from 'react-router-dom'\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        post: state.postReducer.post\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n   \r\n    setPost: (post) => dispatch(actionsPost.setPost(post))\r\n}\r\n)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function MyPosts(props) {\r\n\r\n\r\n    const [myPosts, setMyPosts] = useState([]);\r\n    const { user, setPost } = props;\r\n    const history = useHistory()\r\n    function getMyPosts() {\r\n        fetch('http://localhost:3001/getUserPosts/' + user.id, {\r\n            method: 'get',\r\n            headers: {\r\n                // Authorization: TokenToString,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token'),\r\n\r\n\r\n            },\r\n\r\n        })\r\n            .then((res) => res.json()).then((resJson) => {\r\n                debugger\r\n                setMyPosts(resJson.posts)\r\n                console.log(myPosts[0])\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        getMyPosts()\r\n\r\n    }, [])\r\n\r\n    function deletePost(postId) {\r\n        debugger\r\n        fetch('http://localhost:3001/deletePost/' + user.id + \"/\" + postId + \"/\", {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token'),\r\n\r\n            },\r\n       \r\n        })\r\n\r\n            .then((res) => res.json()).then((resJson) => {\r\n                if (resJson == true) {\r\n                    alert(\"post deleted\")\r\n                    getMyPosts()\r\n\r\n                }\r\n                else {\r\n                    alert(\"post not deleted\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n    function updatePost(post) {\r\n        setPost(post)\r\n        history.push('/updatePost')\r\n    }\r\n    function addPost() {\r\n        history.push('/newPost')\r\n    }\r\n    return (\r\n        <>\r\n            <button style={{ marginLeft: 2 }} type=\"button\" onClick={() => addPost()} className=\"btn btn-outline-success\" style={{ width: 200 }}>add new post</button>\r\n\r\n            <div className=\"row\" style={{ marginLeft: 2 }} >\r\n\r\n                {\r\n\r\n                    myPosts[0] && myPosts.map((post) =>\r\n                       \r\n\r\n                        <div key={post._id} className=\"card border-success mb-3 ml-2 mr-2\" style={{ maxWidth: '18rem', color: 'green' }}>\r\n                            <div className=\"card-header\"><svg style={{ marginLeft: 0 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-calendar4\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM2 2a1 1 0 0 0-1 1v1h14V3a1 1 0 0 0-1-1H2zm13 3H1v9a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V5z\" />\r\n                            </svg>{post.date} <svg style={{ marginRight: 0 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-clock-history\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022l-.074.997zm2.004.45a7.003 7.003 0 0 0-.985-.299l.219-.976c.383.086.76.2 1.126.342l-.36.933zm1.37.71a7.01 7.01 0 0 0-.439-.27l.493-.87a8.025 8.025 0 0 1 .979.654l-.615.789a6.996 6.996 0 0 0-.418-.302zm1.834 1.79a6.99 6.99 0 0 0-.653-.796l.724-.69c.27.285.52.59.747.91l-.818.576zm.744 1.352a7.08 7.08 0 0 0-.214-.468l.893-.45a7.976 7.976 0 0 1 .45 1.088l-.95.313a7.023 7.023 0 0 0-.179-.483zm.53 2.507a6.991 6.991 0 0 0-.1-1.025l.985-.17c.067.386.106.778.116 1.17l-1 .025zm-.131 1.538c.033-.17.06-.339.081-.51l.993.123a7.957 7.957 0 0 1-.23 1.155l-.964-.267c.046-.165.086-.332.12-.501zm-.952 2.379c.184-.29.346-.594.486-.908l.914.405c-.16.36-.345.706-.555 1.038l-.845-.535zm-.964 1.205c.122-.122.239-.248.35-.378l.758.653a8.073 8.073 0 0 1-.401.432l-.707-.707z\" />\r\n                                    <path d=\"M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0v1z\" />\r\n                                    <path d=\"M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z\" />\r\n                                </svg>{post.time}</div>\r\n                            <div className=\"card-body text-success\">\r\n                                <h5 className=\"card-title\">{post.title}</h5>\r\n                                <p className=\"card-text\">{post.body}</p>\r\n                                <button type=\"button\" onClick={() => deletePost(post._id)} className=\"btn btn-outline-success\" style={{ marginRight: 20 }}>delete</button>\r\n                                <button type=\"button\" onClick={() => updatePost(post)} className=\"btn btn-outline-success\">update</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n})\r\n\r\n","D:\\Handsaim\\github\\project\\src\\component\\myPosts\\updatePost.js",["219","220","221","222","223","224","225"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { actionsPost } from '../../redux/actions/postAction';\r\nimport { input } from '../formValidator/inputControl';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        post: state.postReducer.post,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setTitle: (title) => dispatch(actionsPost.setTitle(title)),\r\n    setBody: (body) => dispatch(actionsPost.setBody(body))\r\n\r\n}\r\n)\r\n\r\nfunction UpdatePost(props) {\r\n    const titleRef = React.createRef()\r\n    const bodyRef = React.createRef()\r\n    const { post, setTitle, setBody } = props\r\n    const { handleSubmit, reset, pristine, submitting, valid } = props;\r\n\r\n    debugger\r\n    function updatePost() {\r\n\r\n        const postToUpdate = {\r\n            title: titleRef.current.value,\r\n            body: bodyRef.current.value\r\n        }\r\n\r\n        fetch('http://localhost:3001/updatePost/' + post.id, {\r\n\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token'),\r\n\r\n            },\r\n           \r\n            body: JSON.stringify(postToUpdate)\r\n\r\n        })\r\n\r\n            .then((res) => res.json()).then((resJson) => {\r\n                if (resJson == true) {\r\n                    alert(\"post update\")\r\n                }\r\n                else {\r\n                    alert(\"post not update\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            {/* <div className=\"col-3\" style={{ color: \"green\", marginLeft: 550 }}>\r\n\r\n                <div className=\"form-group\" >\r\n                    <label >title</label>\r\n                    <input type=\"text\" value={post.title} onChange={(e) => setTitle(e.target.value)} className=\"form-control\" ref={titleRef} />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label >body</label>\r\n                    <input type=\"text\" onChange={(e) => setBody(e.target.value)} value={post.body} className=\"form-control\" ref={bodyRef} />\r\n                </div>\r\n                <button class=\"btn btn-success\" onClick={updatePost}>updatePost</button>\r\n            </div> */}\r\n            {/* <form onSubmit={handleSubmit(updatePost())}> */}\r\n            {/* <input type=\"text\" value={post.title} ref={titleRef}></input>\r\n            <input type=\"text\" value={post.body} ref={bodyRef}></input> */}\r\n            {/* <button type=\"submit\" className=\"btn btn-success\"\r\n                disabled={!valid || pristine || submitting}>submit</button> */}\r\n\r\n            {/* </form> */}\r\n            <form className='col-6' style={{ color: \"green\", marginTop: 60, marginLeft: 350 }} onSubmit={handleSubmit(updatePost)}  >\r\n                <svg style={{ width: 200, height: 200 }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                    <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                </svg>\r\n                <h2>update post form</h2>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>title</label>\r\n                    <input\r\n                        value={post.title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        component={input}\r\n                        id=\"title\"\r\n                        ref={titleRef}\r\n                        className=\"form-control\"\r\n\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>body</label>\r\n                    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"4\"\r\n                        onChange={(e) => setBody(e.target.value)}\r\n\r\n                        value={post.body}\r\n                        ref={bodyRef}\r\n                    ></textarea>\r\n                </div>\r\n\r\n                {/* <div className=\"form-group\">\r\n                    <input\r\n                        onChange={(e) => setBody(e.target.value)}\r\n                        value={post.body}\r\n                        name=\"body\"\r\n                        type=\"text\"\r\n                        component={input}\r\n                        id=\"body\"\r\n                        ref={bodyRef}\r\n                        className=\"form-control\" /> */}\r\n\r\n                {/* </div> */}\r\n\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        style={{ width: 300 }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success\" >\r\n                        update\r\n\r\n                </button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\r\n    form: 'UpdatePost',\r\n    // onSubmit\r\n})(UpdatePost))\r\n\r\n{/* <div className = \"col-3\" style = {{color: \"green\", marginLeft: 550}}>\r\n<h2 style={{  color: \"red\" }}>{state.flash}</h2>‏\r\n\r\n     <div className=\"form-group\" >\r\n         <label >שם משתמש</label>\r\n         <input type=\"text\" value = {user.name} class=\"form-control\" id=\"userName\" onChange = {(e) => setName(e.target.value)} placeholder=\"שם משתמש\" />\r\n     </div>\r\n     <div class=\"form-group\">\r\n         <label >סיסמא</label>\r\n         <input type=\"password\" value = {user.password} class=\"form-control\" id=\"userPassword\" onChange = {(e) => setPassword(e.target.value)} placeholder=\"סיסמא\" />\r\n     </div>\r\n     <button  class=\"btn btn-success\" onClick = {logIn}>הכנס</button>\r\n </div>\r\n</> */}","D:\\Handsaim\\github\\project\\src\\redux\\reducers\\ReducerUtils.js",[],"D:\\Handsaim\\github\\project\\src\\component\\formValidator\\inputControl.js",[],"D:\\Handsaim\\github\\project\\src\\redux\\actions\\userAction.js",[],"D:\\Handsaim\\github\\project\\src\\component\\formValidator\\formValidator.js",[],"D:\\Handsaim\\github\\project\\src\\component\\addPost.js",[],"D:\\Handsaim\\github\\project\\src\\redux\\actions\\postAction.js",[],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":8,"column":8,"nodeType":"232","messageId":"233","endLine":8,"endColumn":13},{"ruleId":"230","severity":1,"message":"234","line":15,"column":8,"nodeType":"232","messageId":"233","endLine":15,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":37,"column":34,"nodeType":"237","messageId":"238","endLine":37,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":37,"column":56,"nodeType":"237","messageId":"238","endLine":37,"endColumn":58},{"ruleId":"235","severity":1,"message":"236","line":40,"column":34,"nodeType":"237","messageId":"238","endLine":40,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":40,"column":56,"nodeType":"237","messageId":"238","endLine":40,"endColumn":58},{"ruleId":"239","severity":1,"message":"240","line":118,"column":1,"nodeType":"241","messageId":"242","endLine":131,"endColumn":8},{"ruleId":"243","severity":1,"message":"244","line":39,"column":11,"nodeType":"245","endLine":39,"endColumn":13,"suggestions":"246"},{"ruleId":"243","severity":1,"message":"247","line":50,"column":8,"nodeType":"245","endLine":50,"endColumn":10,"suggestions":"248"},{"ruleId":"235","severity":1,"message":"236","line":72,"column":29,"nodeType":"237","messageId":"238","endLine":72,"endColumn":31},{"ruleId":"249","severity":1,"message":"250","line":96,"column":123,"nodeType":"251","endLine":96,"endColumn":145},{"ruleId":"230","severity":1,"message":"252","line":3,"column":21,"nodeType":"232","messageId":"233","endLine":3,"endColumn":26},{"ruleId":"239","severity":1,"message":"240","line":130,"column":1,"nodeType":"241","messageId":"242","endLine":143,"endColumn":8},{"ruleId":"230","severity":1,"message":"252","line":3,"column":21,"nodeType":"232","messageId":"233","endLine":3,"endColumn":26},{"ruleId":"230","severity":1,"message":"253","line":27,"column":27,"nodeType":"232","messageId":"233","endLine":27,"endColumn":32},{"ruleId":"230","severity":1,"message":"254","line":27,"column":34,"nodeType":"232","messageId":"233","endLine":27,"endColumn":42},{"ruleId":"230","severity":1,"message":"255","line":27,"column":44,"nodeType":"232","messageId":"233","endLine":27,"endColumn":54},{"ruleId":"230","severity":1,"message":"256","line":27,"column":56,"nodeType":"232","messageId":"233","endLine":27,"endColumn":61},{"ruleId":"235","severity":1,"message":"236","line":57,"column":29,"nodeType":"237","messageId":"238","endLine":57,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":158,"column":1,"nodeType":"241","messageId":"242","endLine":171,"endColumn":8},{"ruleId":"230","severity":1,"message":"231","line":9,"column":8,"nodeType":"232","messageId":"233","endLine":9,"endColumn":13},{"ruleId":"230","severity":1,"message":"234","line":16,"column":8,"nodeType":"232","messageId":"233","endLine":16,"endColumn":15},{"ruleId":"230","severity":1,"message":"257","line":23,"column":13,"nodeType":"232","messageId":"233","endLine":23,"endColumn":17},{"ruleId":"235","severity":1,"message":"236","line":36,"column":34,"nodeType":"237","messageId":"238","endLine":36,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":36,"column":56,"nodeType":"237","messageId":"238","endLine":36,"endColumn":58},{"ruleId":"235","severity":1,"message":"236","line":38,"column":34,"nodeType":"237","messageId":"238","endLine":38,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":38,"column":56,"nodeType":"237","messageId":"238","endLine":38,"endColumn":58},{"ruleId":"243","severity":1,"message":"244","line":32,"column":11,"nodeType":"245","endLine":32,"endColumn":13,"suggestions":"258"},{"ruleId":"226","replacedBy":"259"},{"ruleId":"228","replacedBy":"260"},{"ruleId":"230","severity":1,"message":"252","line":3,"column":21,"nodeType":"232","messageId":"233","endLine":3,"endColumn":26},{"ruleId":"239","severity":1,"message":"240","line":90,"column":1,"nodeType":"241","messageId":"242","endLine":103,"endColumn":8},{"ruleId":"243","severity":1,"message":"247","line":49,"column":8,"nodeType":"245","endLine":49,"endColumn":10,"suggestions":"261"},{"ruleId":"235","severity":1,"message":"236","line":65,"column":29,"nodeType":"237","messageId":"238","endLine":65,"endColumn":31},{"ruleId":"249","severity":1,"message":"250","line":89,"column":123,"nodeType":"251","endLine":89,"endColumn":145},{"ruleId":"230","severity":1,"message":"252","line":3,"column":21,"nodeType":"232","messageId":"233","endLine":3,"endColumn":26},{"ruleId":"230","severity":1,"message":"253","line":24,"column":27,"nodeType":"232","messageId":"233","endLine":24,"endColumn":32},{"ruleId":"230","severity":1,"message":"254","line":24,"column":34,"nodeType":"232","messageId":"233","endLine":24,"endColumn":42},{"ruleId":"230","severity":1,"message":"255","line":24,"column":44,"nodeType":"232","messageId":"233","endLine":24,"endColumn":54},{"ruleId":"230","severity":1,"message":"256","line":24,"column":56,"nodeType":"232","messageId":"233","endLine":24,"endColumn":61},{"ruleId":"235","severity":1,"message":"236","line":49,"column":29,"nodeType":"237","messageId":"238","endLine":49,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":150,"column":1,"nodeType":"241","messageId":"242","endLine":163,"endColumn":8},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'newPost' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ListPosts'. Either include it or remove the dependency array.","ArrayExpression",["264"],"React Hook useEffect has a missing dependency: 'getMyPosts'. Either include it or remove the dependency array.",["265"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Field' is defined but never used.","'reset' is assigned a value but never used.","'pristine' is assigned a value but never used.","'submitting' is assigned a value but never used.","'valid' is assigned a value but never used.","'user' is assigned a value but never used.",["266"],["262"],["263"],["267"],"no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"268","fix":"272"},{"desc":"270","fix":"273"},"Update the dependencies array to be: [ListPosts]",{"range":"274","text":"275"},"Update the dependencies array to be: [getMyPosts]",{"range":"276","text":"277"},{"range":"278","text":"275"},{"range":"279","text":"277"},[1241,1243],"[ListPosts]",[1560,1562],"[getMyPosts]",[913,915],[1409,1411]]